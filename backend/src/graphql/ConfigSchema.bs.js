// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Relay = require("../external/relay.bs.js");
var Graphql = require("graphql");
var NodeDefinition = require("./nodeDefinition.bs.js");

var configType = new Graphql.GraphQLObjectType({
      name: "Config",
      description: "User config for pomodoro timer",
      interfaces: (function (param) {
          return [NodeDefinition.nodeDefinitions.nodeInterface];
        }),
      fields: (function (param) {
          return {
                  id: {
                    type: new Graphql.GraphQLNonNull(Graphql.GraphQLID),
                    description: "The uuid of the user.",
                    resolve: (function (obj) {
                        return Relay.customIdTypeCreator(obj, "config");
                      })
                  },
                  pomodoroDuration: {
                    type: new Graphql.GraphQLNonNull(Graphql.GraphQLInt),
                    description: "The duration of a pomodoro in minutes.",
                    resolve: undefined
                  },
                  shortBreakDuration: {
                    type: new Graphql.GraphQLNonNull(Graphql.GraphQLInt),
                    description: "The duration of a short break in minutes.",
                    resolve: undefined
                  },
                  longBreakDuration: {
                    type: new Graphql.GraphQLNonNull(Graphql.GraphQLInt),
                    description: "The duration of a long break in minutes.",
                    resolve: undefined
                  },
                  longBreakInterval: {
                    type: new Graphql.GraphQLNonNull(Graphql.GraphQLInt),
                    description: "The number of pomodoros before a long break.",
                    resolve: undefined
                  },
                  autoStartBreak: {
                    type: new Graphql.GraphQLNonNull(Graphql.GraphQLBoolean),
                    description: "Whether to automatically start a break after a pomodoro.",
                    resolve: undefined
                  },
                  autoStartPomodoro: {
                    type: new Graphql.GraphQLNonNull(Graphql.GraphQLBoolean),
                    description: "Whether to automatically start a pomodoro after a break.",
                    resolve: undefined
                  },
                  showCompletedTasks: {
                    type: new Graphql.GraphQLNonNull(Graphql.GraphQLBoolean),
                    description: "Whether to show completed tasks in the task list.",
                    resolve: undefined
                  },
                  createdAt: {
                    type: new Graphql.GraphQLNonNull(Graphql.GraphQLInt),
                    description: "The timestamp of when the user was created.",
                    resolve: undefined
                  },
                  updatedAt: {
                    type: new Graphql.GraphQLNonNull(Graphql.GraphQLInt),
                    description: "The timestamp of when the user was last updated.",
                    resolve: undefined
                  }
                };
        })
    });

exports.configType = configType;
/* configType Not a pure module */
